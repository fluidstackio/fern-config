{
  "openapi": "3.1.0",
  "info": {
    "title": "Fluidstack API Service",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://platform.fluidstack.io",
      "description": "Production server"
    }
  ],
  "paths": {
    "/healthcheck": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Healthcheck",
        "operationId": "healthcheck_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckOutSchema"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "General"
        ],
        "summary": "Healthcheck",
        "operationId": "healthcheck_healthcheck_head",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckOutSchema"
                }
              }
            }
          }
        }
      }
    },
    "/instances": {
      "get": {
        "summary": "List user instances",
        "description": "This endpoint is used to retrieve a list of all instances associated with the authenticated user.",
        "operationId": "list_instances_instances_get",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListInstanceResponse"
                  },
                  "title": "Response List Instances Instances Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new instance",
        "description": "This endpoint is used to create a new instance. You must provide a name for the instance, the gpu_type, and a list of SSH key names.\n\nIf you do not provide values for gpu_count and operating_system_label when calling this endpoint, the default values of 1 and 'ubuntu_20_04_lts' are used respectively.",
        "operationId": "create_instance_instances_post",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/stop": {
      "put": {
        "summary": "Stop an instance",
        "description": "This endpoint can be used to stop an existing instance by its ID.",
        "operationId": "stop_instance_instances__instance_id__stop_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/start": {
      "put": {
        "summary": "Start an instance",
        "description": "This endpoint can be used to start an existing instance by its ID.",
        "operationId": "start_instance_instances__instance_id__start_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}": {
      "delete": {
        "summary": "Terminate an instance",
        "description": "This endpoint can be used to terminate an existing instance by its ID.",
        "operationId": "terminate_instance_instances__instance_id__delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ssh_keys": {
      "get": {
        "summary": "List SSH keys",
        "description": "Fetch a list of SSH keys associated with the authenticated user.",
        "operationId": "list_user_ssh_keys_ssh_keys_get",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSHKeyResponse"
                  },
                  "title": "Response List User Ssh Keys Ssh Keys Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an SSH key",
        "description": "Create a new SSH key for the authenticated user.\n\nYou must provide a unique name for the SSH key, along with a public key. The public key you provide will be duplicated on your FluidStack account for use as as an SSH key.\n\n<Note>Supported public key formats: ssh-rsa, ssh-dss (DSA), ssh-ed25519, ecdsa keys with NIST curves</Note>",
        "operationId": "create_ssh_key_ssh_keys_post",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSSHKeyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ssh_keys/{ssh_key_name}": {
      "delete": {
        "summary": "Delete an SSH key",
        "description": "Delete an existing SSH key using the SSH key name.",
        "operationId": "delete_ssh_key_ssh_keys__ssh_key_name__delete",
        "parameters": [
          {
            "name": "ssh_key_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ssh Key Name"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/list_available_configurations": {
      "get": {
        "summary": "List available configurations",
        "description": "List available configurations including GPU type, GPU count, RAM size and disk size.",
        "operationId": "list_available_configurations_list_available_configurations_get",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationResponse"
                  },
                  "title": "Response List Available Configurations List Available Configurations Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/list_available_os_templates": {
      "get": {
        "summary": "List available OS template images",
        "description": "List available OS template images. Use the label to create an instance.",
        "operationId": "list_available_os_templates_list_available_os_templates_get",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatingSystemResponse"
                  },
                  "title": "Response List Available Os Templates List Available Os Templates Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigurationInstanceResponse": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/EntityId"
          },
          "gpu_model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GPUModelResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "The GPU model of the configuration"
          },
          "cpu_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Model",
            "description": "The CPU model of the configuration.",
            "default": "generic"
          },
          "gpu_count": {
            "type": "integer",
            "title": "Gpu Count",
            "description": "The number of GPUs in the configuration."
          },
          "cpu_count": {
            "type": "integer",
            "title": "Cpu Count",
            "description": "The number of CPUs in the configuration."
          },
          "nvme_storage_size_gb": {
            "type": "integer",
            "title": "Nvme Storage Size Gb",
            "description": "The size of NVMe in the configuration."
          },
          "memory_size_gb": {
            "type": "number",
            "title": "Memory Size Gb",
            "description": "The amount of RAM memory in the configuration."
          },
          "estimated_provisioning_time_minutes": {
            "type": "integer",
            "title": "Estimated Provisioning Time Minutes",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "id",
          "gpu_model",
          "gpu_count",
          "cpu_count",
          "nvme_storage_size_gb",
          "memory_size_gb"
        ],
        "title": "ConfigurationInstanceResponse"
      },
      "ConfigurationResponse": {
        "properties": {
          "gpu_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GPUType"
              }
            ],
            "description": "The GPU type of the configuration."
          },
          "gpu_counts": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Gpu Counts",
            "description": "The number of GPUs in the configuration."
          },
          "price_per_gpu_hr": {
            "type": "string",
            "title": "Price Per Gpu Hr",
            "description": "The price per GPU hour of the configuration."
          },
          "estimated_provisioning_time_minutes": {
            "type": "integer",
            "title": "Estimated Provisioning Time Minutes",
            "default": 5
          }
        },
        "type": "object",
        "required": [
          "gpu_type",
          "gpu_counts",
          "price_per_gpu_hr"
        ],
        "title": "ConfigurationResponse"
      },
      "CreateInstanceRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the instance.",
            "default": ""
          },
          "gpu_type": {
            "$ref": "#/components/schemas/GPUType"
          },
          "gpu_count": {
            "type": "integer",
            "title": "Gpu Count",
            "description": "The number of GPUs to attach to the instance.",
            "default": 1
          },
          "ssh_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1,
            "title": "Ssh Keys",
            "description": "The list of SSH key names to add to the instance\n\nThese SSH keys are used to connect to the instance."
          },
          "operating_system_label": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              }
            ],
            "description": "The operating system label to be used to create the instance.",
            "default": "ubuntu_20_04_lts_nvidia"
          },
          "region": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Region"
              },
              {
                "type": "null"
              }
            ],
            "description": "The region to create the instance in."
          }
        },
        "type": "object",
        "required": [
          "gpu_type",
          "ssh_keys"
        ],
        "title": "CreateInstanceRequest"
      },
      "CreateInstanceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "gpu_type": {
            "$ref": "#/components/schemas/GPUType"
          },
          "operating_system_label": {
            "$ref": "#/components/schemas/SupportedOperatingSystem"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "gpu_type",
          "operating_system_label"
        ],
        "title": "CreateInstanceResponse"
      },
      "CreateSSHKeyRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the SSH key."
          },
          "public_key": {
            "type": "string",
            "title": "Public Key",
            "description": "The public key of the SSH key."
          }
        },
        "type": "object",
        "required": [
          "name",
          "public_key"
        ],
        "title": "CreateSSHKeyRequest"
      },
      "EntityId": {
        "type": "string",
        "title": "EntityId"
      },
      "GPUModelResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The FluidStack unique name of the GPU model."
          },
          "memory_size_gb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Size Gb",
            "description": "Memory capacity of the GPU in megabytes."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "GPUModelResponse"
      },
      "GPUType": {
        "type": "string",
        "enum": [
          "RTX_A4000_16GB",
          "RTX_A6000_48GB",
          "RTX_A5000_24GB",
          "A100_PCIE_80GB",
          "A40_48GB",
          "A30_24GB",
          "A100_SXM4_80GB",
          "A10_PCIE_24GB",
          "A100_SXM4_40GB",
          "A100_PCIE_40GB",
          "A100_NVLINK_80GB",
          "A100_NVLINK_40GB",
          "H100_SXM5_80GB",
          "H100_PCIE_80GB",
          "H100_NVLINK_80GB",
          "RTX_6000_ADA_48GB",
          "L40_48GB",
          "L4_24GB",
          "T4_16GB"
        ],
        "title": "GPUType"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthCheckOutSchema": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "ok"
          }
        },
        "type": "object",
        "title": "HealthCheckOutSchema"
      },
      "InstanceStatus": {
        "type": "string",
        "enum": [
          "running",
          "pending",
          "unhealthy",
          "shutting_down",
          "terminated",
          "stopping",
          "stopped"
        ],
        "title": "InstanceStatus"
      },
      "ListInstanceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier of the instance."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceStatus"
              }
            ],
            "description": "The current status of the instance.",
            "default": "pending"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The username used to connect to the instance\n\nFor example, to connect to the instance via SSH, use `ssh <username>@<ip_address> -p <ssh_port>`.",
            "default": "ubuntu"
          },
          "ssh_port": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Port",
            "description": "The SSH port to be used to connect to the instance.",
            "default": "22"
          },
          "ssh_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Keys",
            "description": "This is the list of the SSH keys of the instance with which you can login.",
            "default": []
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address",
            "description": "The IP address of the instance."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name provided when the instance was created."
          },
          "current_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Rate",
            "description": "The current hourly price of the instance per processor based on its current status."
          },
          "configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigurationInstanceResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "The configuration used to create the instance."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation date and time of the instance."
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ListInstanceResponse"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "OperatingSystemResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The friendly name of the operating system."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the operating system detailing the list of pre-installed packages and customisations, if any."
          },
          "label": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              }
            ],
            "description": "The unique slug identifier of the operating system."
          }
        },
        "type": "object",
        "required": [
          "name",
          "label"
        ],
        "title": "OperatingSystemResponse"
      },
      "Region": {
        "type": "string",
        "enum": [
          "NORWAY",
          "CANADA",
          "SWEDEN",
          "NETHERLANDS"
        ],
        "title": "Region"
      },
      "SSHKeyResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the SSH key."
          },
          "public_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Key",
            "description": "The public key."
          }
        },
        "type": "object",
        "required": [
          "name",
          "public_key"
        ],
        "title": "SSHKeyResponse"
      },
      "SupportedOperatingSystem": {
        "type": "string",
        "enum": [
          "ubuntu_22_04_lts",
          "ubuntu_20_04_lts",
          "ubuntu_20_04_lts_nvidia",
          "ubuntu_22_04_lts_nvidia"
        ],
        "title": "SupportedOperatingSystem",
        "default": "ubuntu_20_04_lts"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}
