{
  "openapi": "3.1.0",
  "info": {
    "title": "Fluidstack API Service",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "https://platform.fluidstack.io",
      "description": "Production server"
    }
  ],
  "paths": {
    "/healthcheck": {
      "get": {
        "tags": [
          "General"
        ],
        "summary": "Healthcheck",
        "operationId": "healthcheck_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckOutSchema"
                }
              }
            }
          }
        }
      },
      "head": {
        "tags": [
          "General"
        ],
        "summary": "Healthcheck",
        "operationId": "healthcheck_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckOutSchema"
                }
              }
            }
          }
        }
      }
    },
    "/instances": {
      "get": {
        "summary": "List user instances",
        "description": "This endpoint is used to retrieve a list of all instances associated with the authenticated user.",
        "operationId": "list_user_instances_instances_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "include_failed_instances",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include failed instances. Default is False.",
              "default": false,
              "title": "Include Failed Instances"
            },
            "description": "Include failed instances. Default is False."
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ListInstanceResponse"
                  },
                  "title": "Response List User Instances Instances Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new instance",
        "description": "This endpoint is used to create a new instance. You must provide a custom `name` for the instance, its `gpu_type`, and the name of its `ssh_key`. \n\nIf no values are provided for the `gpu_count` and `operating_system_label`, the default values of `1` and `ubuntu_20_04_lts_nvidia` are used respectively.",
        "operationId": "create_instance_instances_post",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInstanceRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}": {
      "get": {
        "summary": "Fetch a single user instance",
        "description": "This endpoint is used to retrieve a single instance associated with the authenticated user by its ID. \n    This endpoint returns HTTP 202 Accepted code if the instance is still pending. Otherwise, it returns HTTP 200 OK code.",
        "operationId": "get_user_instance_instances__instance_id__get",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Terminate an instance",
        "description": "This endpoint is used to terminate an existing instance by its ID.",
        "operationId": "terminate_instance_instances__instance_id__delete",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/stop": {
      "put": {
        "summary": "Stop an instance",
        "description": "This endpoint is used to stop an existing instance by its ID.",
        "operationId": "stop_instance_instances__instance_id__stop_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/instances/{instance_id}/start": {
      "put": {
        "summary": "Start an instance",
        "description": "This endpoint is used to start an existing instance by its ID.",
        "operationId": "start_instance_instances__instance_id__start_put",
        "parameters": [
          {
            "name": "instance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Instance Id"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInstanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ssh_keys": {
      "get": {
        "summary": "List SSH keys",
        "description": "Fetch a list of SSH key names associated with the authenticated user.",
        "operationId": "list_user_ssh_keys_ssh_keys_get",
        "parameters": [
          {
            "name": "show_all",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show all SSH keys",
              "default": false,
              "title": "Show All"
            },
            "description": "Show all SSH keys"
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SSHKeyResponse"
                  },
                  "title": "Response List User Ssh Keys Ssh Keys Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create an SSH key",
        "description": "Create a new SSH key for the authenticated user.\n\nA unique name must be provided for the SSH key, along with a public key. The public key you provide is stored on your FluidStack account for use in SSH authentication.\n\nSupported public key formats: ssh-rsa, ssh-dss (DSA), ssh-ed25519, and ecdsa keys with NIST curves.",
        "operationId": "create_ssh_key_ssh_keys_post",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSSHKeyRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SSHKeyResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ssh_keys/{ssh_key_name}": {
      "delete": {
        "summary": "Delete an SSH key",
        "description": "Delete an existing SSH key by its name.",
        "operationId": "delete_ssh_key_ssh_keys__ssh_key_name__delete",
        "parameters": [
          {
            "name": "ssh_key_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Ssh Key Name"
            }
          },
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/list_available_configurations": {
      "get": {
        "summary": "List available configurations",
        "description": "List available configurations including GPU type, GPU count, RAM size, and disk size.",
        "operationId": "list_available_configurations_list_available_configurations_get",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationResponse"
                  },
                  "title": "Response List Available Configurations List Available Configurations Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/list_available_os_templates": {
      "get": {
        "summary": "List available OS template images",
        "description": "List available OS template images. Use the `label` for your desired template as the `operating_system_label` when you create an instance.",
        "operationId": "list_available_os_templates_list_available_os_templates_get",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OperatingSystemResponse"
                  },
                  "title": "Response List Available Os Templates List Available Os Templates Get"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/company-details": {
      "put": {
        "summary": "Update the user company details",
        "description": "Update the user company details",
        "operationId": "update_company_details_user_company_details_put",
        "parameters": [
          {
            "name": "api-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Api-Key"
            }
          },
          {
            "name": "wos_session",
            "in": "cookie",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Wos Session"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserCompanyDetailsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConfigurationInstanceResponse": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/EntityId-Output"
          },
          "gpu_model": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GPUModelResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "The GPU model of the configuration."
          },
          "cpu_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Model",
            "description": "The CPU model of the configuration.",
            "default": "generic"
          },
          "gpu_count": {
            "type": "integer",
            "title": "Gpu Count",
            "description": "The number of GPUs in the configuration."
          },
          "cpu_count": {
            "type": "integer",
            "title": "Cpu Count",
            "description": "The number of CPUs in the configuration."
          },
          "nvme_storage_size_gb": {
            "type": "integer",
            "title": "Nvme Storage Size Gb",
            "description": "The size of NVMe in the configuration."
          },
          "memory_size_gb": {
            "type": "number",
            "title": "Memory Size Gb",
            "description": "The amount of RAM memory in the configuration."
          },
          "estimated_provisioning_time_minutes": {
            "type": "integer",
            "title": "Estimated Provisioning Time Minutes",
            "default": 5
          },
          "region": {
            "$ref": "#/components/schemas/Region"
          }
        },
        "type": "object",
        "required": [
          "id",
          "gpu_model",
          "gpu_count",
          "cpu_count",
          "nvme_storage_size_gb",
          "memory_size_gb",
          "region"
        ],
        "title": "ConfigurationInstanceResponse"
      },
      "ConfigurationResponse": {
        "properties": {
          "gpu_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GPUType"
              }
            ],
            "description": "The GPU type of the configuration."
          },
          "gpu_counts": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Gpu Counts",
            "description": "The number of GPUs in the configuration."
          },
          "price_per_gpu_hr": {
            "type": "string",
            "title": "Price Per Gpu Hr",
            "description": "The price per GPU hour of the configuration."
          },
          "estimated_provisioning_time_minutes": {
            "type": "integer",
            "title": "Estimated Provisioning Time Minutes",
            "default": 5
          },
          "regions": {
            "items": {
              "$ref": "#/components/schemas/Region"
            },
            "type": "array",
            "title": "Regions",
            "description": "The regions the configuration is available in."
          }
        },
        "type": "object",
        "required": [
          "gpu_type",
          "gpu_counts",
          "price_per_gpu_hr",
          "regions"
        ],
        "title": "ConfigurationResponse"
      },
      "CreateInstanceRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The custom name of the instance."
          },
          "gpu_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GPUType"
              }
            ],
            "description": "The GPU type of the instance."
          },
          "gpu_count": {
            "type": "integer",
            "title": "Gpu Count",
            "description": "The number of GPUs to attach to the instance.",
            "default": 1
          },
          "ssh_key": {
            "type": "string",
            "title": "Ssh Key",
            "description": "The SSH key name to add to the instance. This SSH key is used to connect to the instance."
          },
          "operating_system_label": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              },
              {
                "type": "string"
              }
            ],
            "title": "Operating System Label",
            "description": "The operating system label used to create the instance.",
            "default": "ubuntu_20_04_lts_nvidia"
          },
          "region": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Region"
              },
              {
                "type": "null"
              }
            ],
            "description": "The region in which to create the instance."
          },
          "volumes": {
            "items": {
              "$ref": "#/components/schemas/VolumeInstanceResponse-Input"
            },
            "type": "array",
            "title": "Volumes",
            "description": "The volumes attached to the instance.",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "gpu_type",
          "ssh_key"
        ],
        "title": "CreateInstanceRequest"
      },
      "CreateInstanceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "gpu_type": {
            "$ref": "#/components/schemas/GPUType"
          },
          "operating_system_label": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operating System Label"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "gpu_type"
        ],
        "title": "CreateInstanceResponse"
      },
      "CreateSSHKeyRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the SSH key."
          },
          "public_key": {
            "type": "string",
            "title": "Public Key",
            "description": "The public key of the SSH key."
          }
        },
        "type": "object",
        "required": [
          "name",
          "public_key"
        ],
        "title": "CreateSSHKeyRequest"
      },
      "EntityId-Input": {
        "properties": {
          "value": {
            "type": "string",
            "format": "uuid",
            "title": "Value"
          },
          "prefix": {
            "type": "string",
            "title": "Prefix"
          }
        },
        "type": "object",
        "required": [
          "value",
          "prefix"
        ],
        "title": "EntityId"
      },
      "EntityId-Output": {
        "type": "string",
        "title": "EntityId"
      },
      "GPUModelResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The FluidStack unique name of the GPU model."
          },
          "memory_size_gb": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Size Gb",
            "description": "Memory capacity of the GPU in gigabytes."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "GPUModelResponse"
      },
      "GPUType": {
        "type": "string",
        "enum": [
          "RTX_A4000_16GB",
          "RTX_A6000_48GB",
          "RTX_A5000_24GB",
          "TESLA_V100_16GB",
          "A100_PCIE_80GB",
          "A40_48GB",
          "A30_24GB",
          "A100_SXM4_80GB",
          "A10_PCIE_24GB",
          "A100_SXM4_40GB",
          "A100_PCIE_40GB",
          "A100_NVLINK_80GB",
          "A100_NVLINK_40GB",
          "H100_SXM5_80GB",
          "H100_SXM4_80GB",
          "A10_24GB",
          "RTX_6000_24GB",
          "H100_PCIE_80GB",
          "H100_NVLINK_80GB",
          "RTX_A6000_ADA_48GB",
          "L40_48GB",
          "L4_24GB",
          "T4_16GB"
        ],
        "title": "GPUType"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthCheckOutSchema": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "default": "ok"
          }
        },
        "type": "object",
        "title": "HealthCheckOutSchema"
      },
      "InstanceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier of the instance."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceStatus"
              }
            ],
            "description": "The current status of the instance.",
            "default": "pending"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The username used to connect to the instance. For example, to connect to the instance via SSH, use: \"ssh -i <path/to/private/key> <username>@<ip_address>\".",
            "default": "ubuntu"
          },
          "ssh_port": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Port",
            "description": "The SSH port used to connect to the instance.",
            "default": "22"
          },
          "ssh_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ssh Keys",
            "description": "The names of the SSH keys used to login to the instance.",
            "default": []
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address",
            "description": "The IP address of the instance."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name provided when the instance was created."
          },
          "current_gpu_hr_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Gpu Hr Cost",
            "description": "The current hourly price of the instance per processor based on its current status."
          },
          "configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigurationInstanceResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "The configuration used to create the instance."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation date and time of the instance."
          },
          "volumes": {
            "items": {
              "$ref": "#/components/schemas/VolumeInstanceResponse-Output"
            },
            "type": "array",
            "title": "Volumes",
            "description": "The volumes attached to the instance.",
            "default": []
          },
          "operating_system_label": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operating System Label",
            "description": "The operating system used to create the instance."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user that owns the instance."
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "InstanceResponse"
      },
      "InstanceStatus": {
        "type": "string",
        "enum": [
          "running",
          "starting",
          "pending",
          "failed",
          "terminated",
          "stopped",
          "stopping",
          "provisioning"
        ],
        "title": "InstanceStatus"
      },
      "ListInstanceResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The unique identifier of the instance."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InstanceStatus"
              }
            ],
            "description": "The current status of the instance.",
            "default": "pending"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "The username used to connect to the instance. For example, to connect to the instance via SSH, use: \"ssh -i <path/to/private/key> <username>@<ip_address>\".",
            "default": "ubuntu"
          },
          "ssh_port": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ssh Port",
            "description": "The SSH port used to connect to the instance.",
            "default": "22"
          },
          "ssh_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Ssh Keys",
            "description": "The names of the SSH keys used to login to the instance.",
            "default": []
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address",
            "description": "The IP address of the instance."
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "The name provided when the instance was created."
          },
          "current_gpu_hr_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Gpu Hr Cost",
            "description": "The current hourly price of the instance per processor based on its current status."
          },
          "configuration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigurationInstanceResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "The configuration used to create the instance."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation date and time of the instance."
          },
          "volumes": {
            "items": {
              "$ref": "#/components/schemas/VolumeInstanceResponse-Output"
            },
            "type": "array",
            "title": "Volumes",
            "description": "The volumes attached to the instance.",
            "default": []
          },
          "operating_system_label": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operating System Label",
            "description": "The operating system used to create the instance."
          },
          "user_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Email",
            "description": "The email of the user that owns the instance."
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "ListInstanceResponse"
      },
      "Message": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "additionalProperties": false,
        "type": "object",
        "required": [
          "message"
        ],
        "title": "Message"
      },
      "OperatingSystemResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The friendly name of the operating system."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "The description of the operating system, detailing the pre-installed packages and customisations, if any."
          },
          "label": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupportedOperatingSystem"
              }
            ],
            "description": "The unique slug identifier of the operating system."
          }
        },
        "type": "object",
        "required": [
          "name",
          "label"
        ],
        "title": "OperatingSystemResponse"
      },
      "Region": {
        "type": "string",
        "enum": [
          "NORWAY",
          "FINLAND",
          "CANADA",
          "SWEDEN",
          "NETHERLANDS",
          "TEXAS_USA",
          "CALIFORNIA_USA",
          "ARIZONA_USA",
          "VIRGINIA_USA",
          "ILLINOIS_USA",
          "JAPAN",
          "UTAH_USA",
          "WASHINGTON_USA",
          "GERMANY",
          "INDIA",
          "ISRAEL",
          "LUXEMBOURG"
        ],
        "title": "Region"
      },
      "SSHKeyResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the SSH key."
          },
          "public_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Public Key",
            "description": "The public key."
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "SSHKeyResponse"
      },
      "SupportedOperatingSystem": {
        "type": "string",
        "enum": [
          "ubuntu_20_04_lts_nvidia",
          "ubuntu_22_04_lts_nvidia"
        ],
        "title": "SupportedOperatingSystem"
      },
      "UpdateUserCompanyDetailsRequest": {
        "properties": {
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name"
          },
          "company_vat_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Vat Number"
          },
          "company_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Address"
          },
          "company_tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Tax Id"
          },
          "company_contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Contact Info"
          }
        },
        "type": "object",
        "title": "UpdateUserCompanyDetailsRequest"
      },
      "User": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/EntityId-Output"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "stripe_customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stripe Customer Id"
          },
          "workos_user_id": {
            "type": "string",
            "title": "Workos User Id"
          },
          "workos_organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workos Organization Id"
          },
          "is_banned": {
            "type": "boolean",
            "title": "Is Banned",
            "default": false
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "auto_topup_enabled": {
            "type": "boolean",
            "title": "Auto Topup Enabled",
            "default": false
          },
          "auto_topup_amount": {
            "type": "integer",
            "title": "Auto Topup Amount",
            "default": 0
          },
          "auto_topup_minimum_balance": {
            "type": "integer",
            "title": "Auto Topup Minimum Balance",
            "default": 0
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name"
          },
          "company_vat_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Vat Number"
          },
          "company_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Address"
          },
          "company_tax_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Tax Id"
          },
          "company_contact_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Contact Info"
          },
          "auto_terminate_on_depletion": {
            "type": "boolean",
            "title": "Auto Terminate On Depletion",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "workos_user_id"
        ],
        "title": "User"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VolumeInstanceResponse-Input": {
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityId-Input"
              }
            ],
            "description": "The ID of the volume."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the volume."
          },
          "size_gb": {
            "type": "integer",
            "title": "Size Gb",
            "description": "The size of the volume in GB."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VolumeStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "The status of the volume.",
            "default": "creating"
          },
          "cost_gb_hr": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Cost Gb Hr",
            "description": "The current hourly rate of the volume."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation time of the volume."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The update time of the volume."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "size_gb",
          "cost_gb_hr",
          "created_at",
          "updated_at"
        ],
        "title": "VolumeInstanceResponse"
      },
      "VolumeInstanceResponse-Output": {
        "properties": {
          "id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EntityId-Output"
              }
            ],
            "description": "The ID of the volume."
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "The name of the volume."
          },
          "size_gb": {
            "type": "integer",
            "title": "Size Gb",
            "description": "The size of the volume in GB."
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VolumeStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "The status of the volume.",
            "default": "creating"
          },
          "cost_gb_hr": {
            "type": "string",
            "title": "Cost Gb Hr",
            "description": "The current hourly rate of the volume."
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "The creation time of the volume."
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "The update time of the volume."
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "size_gb",
          "cost_gb_hr",
          "created_at",
          "updated_at"
        ],
        "title": "VolumeInstanceResponse"
      },
      "VolumeStatus": {
        "type": "string",
        "enum": [
          "creating",
          "attached",
          "attaching",
          "ready",
          "unknown",
          "error",
          "deleted"
        ],
        "title": "VolumeStatus"
      }
    }
  }
}
