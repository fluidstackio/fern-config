// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "go-mod-path/generated/go/core"
)

type ConfigurationResponse struct {
	// The GPU type of the configuration.
	GpuType GpuType `json:"gpu_type" url:"gpu_type"`
	// The number of GPUs in the configuration.
	GpuCounts []int `json:"gpu_counts,omitempty" url:"gpu_counts,omitempty"`
	// The price per GPU hour of the configuration.
	PricePerGpuHr                    string `json:"price_per_gpu_hr" url:"price_per_gpu_hr"`
	EstimatedProvisioningTimeMinutes *int   `json:"estimated_provisioning_time_minutes,omitempty" url:"estimated_provisioning_time_minutes,omitempty"`
	// The regions the configuration is available in.
	Regions []Region `json:"regions,omitempty" url:"regions,omitempty"`

	extraProperties map[string]interface{}
	_rawJSON        json.RawMessage
}

func (c *ConfigurationResponse) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ConfigurationResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler ConfigurationResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ConfigurationResponse(value)

	extraProperties, err := core.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties

	c._rawJSON = json.RawMessage(data)
	return nil
}

func (c *ConfigurationResponse) String() string {
	if len(c._rawJSON) > 0 {
		if value, err := core.StringifyJSON(c._rawJSON); err == nil {
			return value
		}
	}
	if value, err := core.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}
